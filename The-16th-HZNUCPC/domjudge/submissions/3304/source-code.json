[{"id":"3304","submission_id":"3304","filename":"G.cpp","source":"I3ByYWdtYSBHQ0Mgb3B0aW1pemUoMikNCiNwcmFnbWEgR0NDIG9wdGltaXplKDMsIk9mYXN0IiwiaW5saW5lIikNCiNpbmNsdWRlPGJpdHMvc3RkYysrLmg+DQp1c2luZyBuYW1lc3BhY2Ugc3RkOw0KY29uc3QgaW50IGluZiA9IDFlOTsNCmNvbnN0IGludCBtYXhuID0gM2U1ICsgNzsNCnR5cGVkZWYgbG9uZyBsb25nIGxsOw0KdHlwZWRlZiBwYWlyPGludCxpbnQ+IHBpaTsNCnR5cGVkZWYgcGFpcjxsbCxsbD4gcGxsOw0Kc3RydWN0IERTVQ0Kew0KICAgIHZlY3RvcjxpbnQ+ZixzaXo7DQogICAgRFNVIChpbnQgbik6ZihuKSxzaXoobiwxKSB7aW90YShmLmJlZ2luKCksZi5lbmQoKSwwKTsgfQ0KICAgIGludCBsZWFkZXIgKGludCB4KQ0KICAgIHsNCiAgICAgICAgd2hpbGUgKHggIT0gZlt4XSkNCiAgICAgICAgew0KICAgICAgICAgICAgeCA9IGZbeF0gPSBmW2ZbeF1dOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiB4Ow0KICAgIH0NCiAgICBib29sIHNhbWUgKGludCB4LGludCB5KQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGxlYWRlcih4KSA9PSBsZWFkZXIoeSk7DQogICAgfQ0KICAgIGJvb2wgbWVyZ2UgKGludCB4LGludCB5KQ0KICAgIHsNCiAgICAgICAgeCA9IGxlYWRlcih4KTsNCiAgICAgICAgeSA9IGxlYWRlcih5KTsNCiAgICAgICAgaWYgKHggPT0geSkgcmV0dXJuIGZhbHNlOw0KICAgICAgICBpZiAoeCA8IHkpDQogICAgICAgICAgICBmW3ldID0geDsNCiAgICAgICAgZWxzZQ0KICAgICAgICAgICAgZlt4XSA9IHk7DQogICAgICAgIHJldHVybiB0cnVlOw0KICAgIH0NCiAgICBpbnQgc2l6ZShpbnQgeCkgeyByZXR1cm4gc2l6W2xlYWRlcih4KV07fQ0KfTsNCnZlY3RvcjxpbnQ+aGFbbWF4bl0sY29bbWF4bl07DQppbnQgZHBbbWF4bl07DQpwaWkgcHJlW21heG5dOw0Kc3RydWN0IG5vZGUNCnsNCiAgICBpbnQgc3osY3Q7DQp9cFttYXhuXTsNCmludCBtYWluICgpDQp7DQogICAgaW9zOjpzeW5jX3dpdGhfc3RkaW8oZmFsc2UpOw0KICAgIGNpbi50aWUoMCk7DQogICAgY291dC50aWUoMCk7DQogICAgaW50IHR0ID0gMTsNCiAgICAvL2NpbiA+PiB0dDsNCiAgICB3aGlsZSAodHQtLSkNCiAgICB7DQogICAgICAgIGludCBuLG0scTsNCiAgICAgICAgY2luID4+IG4gPj4gcSA+PiBtOw0KICAgICAgICBEU1UgZyhuKjIrMSk7DQogICAgICAgIGludCBwZCA9IDE7DQogICAgICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IG07ICsraSkNCiAgICAgICAgew0KICAgICAgICAgICAgaW50IG9wLGEsYjsNCiAgICAgICAgICAgIGNpbiA+PiBvcCA+PiBhID4+IGI7DQogICAgICAgICAgICBpZiAob3AgPT0gMCkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZiAoIWcuc2FtZShhLGIrbikgJiYgIWcuc2FtZShhK24sYikpDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBnLm1lcmdlKGEsYik7DQogICAgICAgICAgICAgICAgICAgIGcubWVyZ2UoYStuLGIrbik7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIHBkID0gMDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgaWYgKCFnLnNhbWUoYStuLGIrbikgJiYgIWcuc2FtZShhLGIpKQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgZy5tZXJnZShhK24sYik7DQogICAgICAgICAgICAgICAgICAgIGcubWVyZ2UoYSxiK24pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBwZCA9IDA7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICAgIGlmIChwZCkNCiAgICAgICAgew0KICAgICAgICAgICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gbjsgKytpKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGhhW2cubGVhZGVyKGkpXS5wdXNoX2JhY2soaSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBpbnQgdG90ID0gMDsNCiAgICAgICAgICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IG47ICsraSkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBpZiAoaGFbaV0uc2l6ZSgpID4gMCkNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIGludCBzeiA9IGhhW2ldLnNpemUoKTsNCiAgICAgICAgICAgICAgICAgICAgY29bc3pdLnB1c2hfYmFjayhpKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBkcFswXSA9IDE7DQogICAgICAgICAgICBpbnQgZ3MgPSAwOw0KICAgICAgICAgICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gbjsgKytpKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGludCBucyA9IGNvW2ldLnNpemUoKTsNCiAgICAgICAgICAgICAgICBpbnQgbmUgPSAxOw0KICAgICAgICAgICAgICAgIHdoaWxlIChuZSA8PSBucykNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIG5zIC09IG5lOw0KICAgICAgICAgICAgICAgICAgICBwWysrZ3NdID0ge2ksbmV9Ow0KICAgICAgICAgICAgICAgICAgICBuZSAqPSAyOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAobnMgPiAwKQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgcFsrK2dzXSA9IHtpLG5zfTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBmb3IgKGludCBpID0gMTsgaSA8PSBnczsgKytpKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGludCBneCA9IHBbaV0uY3QgKiBwW2ldLnN6Ow0KICAgICAgICAgICAgICAgIGZvciAoaW50IGogPSBxOyBqID49IGd4OyAtLWopDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBpZiAoZHBbai1neF0pDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRwW2pdID0gMTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHByZVtqXSA9IHtqLWd4LGl9Ow0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKGRwW3FdKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIGNvdXQgPDwgIllFU1xuIjsNCiAgICAgICAgICAgICAgICB3aGlsZSAocSA+IDApDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBpbnQgbnAgPSBwcmVbcV0uc2Vjb25kOw0KICAgICAgICAgICAgICAgICAgICBxID0gcHJlW3FdLmZpcnN0Ow0KICAgICAgICAgICAgICAgICAgICBmb3IgKGludCBpID0gMTsgaSA8PSBwW25wXS5jdDsgKytpKQ0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICBpbnQgcHAgPSBjb1twW25wXS5zel0uYmFjaygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29bcFtucF0uc3pdLnBvcF9iYWNrKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGF1dG8gaXQ6aGFbcHBdKQ0KICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdXQgPDwgaXQgPDwgJyAnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGNvdXQgPDwgIlxuIjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBjb3V0IDw8ICJOT1xuIjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBlbHNlew0KICAgICAgICAgICAgY291dCA8PCAiTk9cbiI7DQogICAgICAgIH0NCiAgICB9DQoNCn0NCi8qDQo0IDIgNA0KMSAxIDMNCjEgMiA0DQowIDMgNA0KMCAxIDINCiovDQo="}]