[{"id":"4266","submission_id":"4266","filename":"G.cpp","source":"I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CgojaW5jbHVkZSA8cmFuZG9tPgoKI2RlZmluZSBkYmcoeC4uLikgXAogICAgZG8geyBcCiAgICAgICAgc3RkOjpjb3V0IDw8ICN4IDw8ICIgLT4gIjsgXAogICAgICAgIGVycih4KTsgXAogICAgfSB3aGlsZSAoMCkKCnZvaWQgZXJyKCkgewogICAgc3RkOjpjb3V0IDw8IHN0ZDo6ZW5kbDsKfQoKdGVtcGxhdGU8Y2xhc3MgVCwgY2xhc3MuLi4gVHM+CnZvaWQgZXJyKFQgYXJnLCBUcyAmLi4uIGFyZ3MpIHsKICAgIHN0ZDo6Y291dCA8PCBhcmcgPDwgJyAnOwogICAgZXJyKGFyZ3MuLi4pOwp9Cgp1c2luZyBsbCA9IGxvbmcgbG9uZzsKdXNpbmcgbGQgPSBsb25nIGRvdWJsZTsKdXNpbmcgdWxsID0gdW5zaWduZWQgbG9uZyBsb25nOwp1c2luZyBpMTI4ID0gX19pbnQxMjg7CgpzdHJ1Y3QgRFNVIHsKICAgIHN0ZDo6dmVjdG9yPGludD4gZjsKCiAgICBEU1UoaW50IG4pIDogZihuICsgMSwgLTEpIHt9OwoKICAgIGludCBmaW5kKGludCB4KSB7CiAgICAgICAgcmV0dXJuIGZbeF0gPCAwID8geCA6IGZbeF0gPSBmaW5kKGZbeF0pOwogICAgfQoKICAgIGJvb2wgbWVyZ2UoaW50IHgsIGludCB5KSB7CiAgICAgICAgeCA9IGZpbmQoeCk7CiAgICAgICAgeSA9IGZpbmQoeSk7CiAgICAgICAgaWYgKHggPT0geSkgcmV0dXJuIGZhbHNlOwogICAgICAgIGlmIChmW3hdID4gZlt5XSkgc3RkOjpzd2FwKHgsIHkpOwogICAgICAgIGZbeF0gKz0gZlt5XTsKICAgICAgICBmW3ldID0geDsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBpbnQgc2l6KGludCB4KSB7CiAgICAgICAgcmV0dXJuIC1mW2ZpbmQoeCldOwogICAgfQp9OwoKdm9pZCBydW4oaW50IHRDYXNlKSB7CiAgICBpbnQgbiwgcSwgbTsKICAgIHN0ZDo6Y2luID4+IG4gPj4gcSA+PiBtOwogICAgRFNVIGRzdShuKTsKICAgIHN0ZDo6dmVjdG9yPHN0ZDo6cGFpcjxpbnQsIGludD4+IGVzOwogICAgZm9yIChpbnQgaSA9IDA7IGkgPCBtOyArK2kpIHsKICAgICAgICBpbnQgdCwgdSwgdjsKICAgICAgICBzdGQ6OmNpbiA+PiB0ID4+IHUgPj4gdjsKICAgICAgICB1LS0sIHYtLTsKICAgICAgICBpZiAodCA9PSAwKSB7CiAgICAgICAgICAgIGRzdS5tZXJnZSh1LCB2KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBlcy5lbXBsYWNlX2JhY2sodSwgdik7CiAgICAgICAgfQogICAgfQogICAgc3RkOjp2ZWN0b3I8c3RkOjp2ZWN0b3I8aW50Pj4gYWRqKG4pOwogICAgZm9yIChhdXRvIFt1LCB2XTogZXMpIHsKICAgICAgICB1ID0gZHN1LmZpbmQodSk7CiAgICAgICAgdiA9IGRzdS5maW5kKHYpOwogICAgICAgIGlmICh1ID09IHYpIHsKICAgICAgICAgICAgc3RkOjpjb3V0IDw8ICJOT1xuIjsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBhZGpbdV0ucHVzaF9iYWNrKHYpOwogICAgICAgIGFkalt2XS5wdXNoX2JhY2sodSk7CiAgICB9CiAgICBzdGQ6OnZlY3RvcjxpbnQ+IGNvbChuLCAtMSk7CiAgICBzdGQ6OnZlY3RvcjxzdGQ6OnBhaXI8aW50LCBpbnQ+PiBhOwogICAgc3RkOjp2ZWN0b3I8aW50PiBtYXJrKG4pOwogICAgc3RkOjp2ZWN0b3I8c3RkOjp2ZWN0b3I8aW50Pj4gbWs7CiAgICBmb3IgKGludCBpID0gMDsgaSA8IG47ICsraSkgewogICAgICAgIGludCBydCA9IGRzdS5maW5kKGkpOwogICAgICAgIHN0ZDo6dmVjdG9yPGludD4gbWFya2VkOwogICAgICAgIGlmIChjb2xbcnRdID09IC0xKSB7CiAgICAgICAgICAgIGludCBjbnRbMl0gPSB7fTsKICAgICAgICAgICAgYXV0byBkZnMgPSBbJl0oYXV0byAmZGZzLCBpbnQgdSkgLT4gdm9pZCB7CiAgICAgICAgICAgICAgICBmb3IgKGludCB2OiBhZGpbdV0pIHsKICAgICAgICAgICAgICAgICAgICBpZiAoY29sW3ZdID09IC0xKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbFt2XSA9ICFjb2xbdV07CiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlZC5wdXNoX2JhY2sodik7CiAgICAgICAgICAgICAgICAgICAgICAgIGNudFtjb2xbdl1dICs9IGRzdS5zaXoodik7CiAgICAgICAgICAgICAgICAgICAgICAgIGRmcyhkZnMsIHYpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgY29sW3J0XSA9IDA7CiAgICAgICAgICAgIGNudFswXSArPSBkc3Uuc2l6KHJ0KTsKICAgICAgICAgICAgbWFya2VkLnB1c2hfYmFjayhydCk7CiAgICAgICAgICAgIGRmcyhkZnMsIHJ0KTsKICAgICAgICAgICAgaWYgKGNudFswXSA+IGNudFsxXSkgewogICAgICAgICAgICAgICAgc3RkOjpzd2FwKGNudFswXSwgY250WzFdKTsKICAgICAgICAgICAgICAgIGZvciAoaW50IHU6IG1hcmtlZCkgewogICAgICAgICAgICAgICAgICAgIGNvbFt1XSA9ICFjb2xbdV07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgbWsucHVzaF9iYWNrKG1hcmtlZCk7CiAgICAgICAgICAgIHEgLT0gY250WzBdOwogICAgICAgICAgICBpbnQgaWQgPSBhLnNpemUoKTsKICAgICAgICAgICAgYS5lbXBsYWNlX2JhY2soY250WzFdIC0gY250WzBdLCBpZCk7CiAgICAgICAgfQogICAgfQogICAgZm9yIChhdXRvIFt1LCB2XTogZXMpIHsKICAgICAgICB1ID0gZHN1LmZpbmQodSk7CiAgICAgICAgdiA9IGRzdS5maW5kKHYpOwogICAgICAgIGlmIChjb2xbdV0gPT0gY29sW3ZdKSB7CiAgICAgICAgICAgIHN0ZDo6Y291dCA8PCAiTk9cbiI7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9CiAgICBpZiAocSA8IDApIHsKICAgICAgICBzdGQ6OmNvdXQgPDwgIk5PXG4iOwogICAgfQogICAgc3RkOjpiaXRzZXQ8MTAwMDAxPiBiczsKICAgIGJzWzBdID0gMTsKICAgIHN0ZDo6c29ydChhLmJlZ2luKCksIGEuZW5kKCkpOwogICAgZm9yIChhdXRvIFtpLCBpZF06IGEpIHsKICAgICAgICBicyB8PSBicyA8PCBpOwogICAgfQogICAgaWYgKCFic1txXSkgewogICAgICAgIHN0ZDo6Y291dCA8PCAiTk9cbiI7CiAgICB9IGVsc2UgewogICAgICAgIHN0ZDo6Y291dCA8PCAiWUVTXG4iOwogICAgICAgIHN0ZDo6dmVjdG9yPGludD4gcmV2KGEuc2l6ZSgpKTsKICAgICAgICBmb3IgKGludCBfID0gMDsgXyA8IDEwMDsgKytfKSB7CiAgICAgICAgICAgIHN0ZDo6c2h1ZmZsZShhLmJlZ2luKCksIGEuZW5kKCksIHN0ZDo6bXQxOTkzNyhzdGQ6OnJhbmRvbV9kZXZpY2UoKSgpKSk7CiAgICAgICAgICAgIGludCBub3cgPSBxOwogICAgICAgICAgICBmb3IgKGF1dG8gW2ksIGlkXTogYSkgewogICAgICAgICAgICAgICAgaWYgKGkgPD0gbm93KSB7CiAgICAgICAgICAgICAgICAgICAgbm93IC09IGk7CiAgICAgICAgICAgICAgICAgICAgcmV2W2lkXSA9IDE7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKG5vdykgY29udGludWU7CiAgICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgYS5zaXplKCk7ICsraSkgewogICAgICAgICAgICAgICAgaWYgKHJldltpXSkgewogICAgICAgICAgICAgICAgICAgIGZvciAoaW50IHU6IG1rW2ldKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbFt1XSA9ICFjb2xbdV07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGZvciAoaW50IGkgPSAwOyBpIDwgbjsgKytpKSB7CiAgICAgICAgICAgICAgICBpZiAoY29sW2RzdS5maW5kKGkpXSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgc3RkOjpjb3V0IDw8IGkgKyAxIDw8ICcgJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBzdGQ6OmNvdXQgPDwgJ1xuJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgfQp9CgppbnQgbWFpbigpIHsKICAgIHN0ZDo6aW9zX2Jhc2U6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBzdGQ6OmNpbi50aWUobnVsbHB0cik7CiAgICBpbnQgVCA9IDE7Ci8vICAgIHN0ZDo6Y2luID4+IFQ7CiAgICBmb3IgKGludCB0ID0gMTsgdCA8PSBUOyArK3QpIHsKICAgICAgICBydW4odCk7CiAgICB9CiAgICByZXR1cm4gMDsKfQ=="}]