[{"id":"3850","submission_id":"3850","filename":"c.cpp","source":"I2luY2x1ZGUgImJpdHMvc3RkYysrLmgiDQp0eXBlZGVmIGxvbmcgbG9uZyBpbnQgbGw7DQp1c2luZyBuYW1lc3BhY2Ugc3RkOw0KY29uc3QgbGwgbW9kID0gMUU5Kzc7DQogDQogIA0KDQovLyB2b2lkIHNvbHZlMigpew0KLy8gICAgIGludCBuIDsNCi8vICAgICBjaW4gPj4gbjsNCi8vICAgICB2ZWN0b3I8aW50PiB2KG4pLCB2MihuKTsNCi8vICAgICB2ZWN0b3I8aW50PiBjbnQxKDI2KSwgY250MigyNik7DQovLyAgICAgdmVjdG9yPGludD4gZGlmZigyNiksIHNhbWVDaGFyKDI2KTsNCi8vICAgICBmb3IoaW50IGkgPTAgOyBpIDxuO2krKykgew0KLy8gICAgICAgICBjaW4gPj4gdltpXTsNCi8vICAgICAgICAgLy8gY250W3ZbaV0gLSAnYSddICsrOw0KLy8gICAgIH0NCi8vICAgICBmb3IoaW50IGkgPTAgOyBpIDxuO2krKykgew0KLy8gICAgICAgICBjaW4gPj4gdjJbaV07DQovLyAgICAgICAgIC8vIGNudFt2W2ldIC0gJ2EnXS0tOw0KLy8gICAgIH0NCg0KLy8gICAgIGludCBzYW1lID0gMDsNCg0KDQovLyAgICAgZm9yKGludCBpID0wIDsgaSA8bjtpKyspew0KLy8gICAgICAgICBpZih2W2ldID09IHYyW2ldKSB7DQovLyAgICAgICAgICAgICBzYW1lKys7DQovLyAgICAgICAgICAgICBzYW1lQ2hhcltpXSsrOw0KLy8gICAgICAgICB9DQovLyAgICAgICAgIGNudDFbdltpXSAtICdhJ10rKzsNCi8vICAgICAgICAgY250Mlt2MltpXSAtICdhJ10rKzsNCi8vICAgICB9DQovLyAgICAgZm9yKGludCBpID0gMDsgaSA8IDI2O2krKykgew0KLy8gICAgICAgICBkaWZmW2ldID0gKGNudDFbaV0gLSBjbnQyW2ldKTsNCi8vICAgICB9DQoNCi8vICAgICBmb3IoaW50IGkgPSAwOyBpIDwgMjY7IGkrKykgew0KLy8gICAgICAgICBpZihkaWZmW2ldID09IDApIHsNCi8vICAgICAgICAgICAgIGFucyArPSBzYW1lQ2hhcltpXSArIA0KLy8gICAgICAgICAgICAgY29udGludWU7DQovLyAgICAgICAgIH0NCi8vICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICANCi8vICAgICAgICAgfQ0KDQovLyAgICAgfQ0KDQoNCg0KLy8gICAgIHJldHVybiA7DQoNCg0KLy8gfQ0KDQpjb25zdCBpbnQgTiA9IDI2Ow0KaW50IGFycltOXVtOXTsNCg0KICAgIHZvaWQgcHJpbnQodmVjdG9yPGludD4gJnYpew0KICAgICAgICBmb3IoaW50IGkgPSAwIDsgaSA8IDI2O2krKykgew0KICAgICAgICAgICAgY291dCA8PCB2W2ldIDw8IiBcbiJbaT09MjVdOw0KICAgICAgICB9DQogICAgfQ0KDQp2b2lkIHNvbHZlICgpew0KICAgIHN0cmluZyBzMSwgczI7DQogICAgY2luID4+IHMxID4+IHMyOw0KICAgIGludCBuID0gczEuc2l6ZSgpOw0KICAgIHZlY3RvcjxpbnQ+IHYobiksIHYyKG4pLCBjbnQxKDI2KSwgY250MigyNik7DQogICAgbGwgYW5zID0gMDsNCiAgICBtYXA8cGFpcjxpbnQsaW50PiwgaW50PiBtcDsNCiAgICBjaGFyIGM7DQogICAgZm9yKGludCBpID0wIDsgaSA8bjtpKyspIHsNCiAgICAgICAgDQogICAgICAgICANCiAgICAgICAgdltpXSA9IHMxW2ldLSdhJzsNCiAgICAgICAgY250MVt2W2ldXSsrOw0KICAgICAgICAvLyBjbnRbdltpXSAtICdhJ10gKys7DQogICAgfQ0KICAgIGZvcihpbnQgaSA9MCA7IGkgPG47aSsrKSB7DQogIA0KICAgICAgICB2MltpXSA9IHMyW2ldIC0nYSc7DQogICAgICAgIGNudDJbdjJbaV1dKys7DQogICAgfQ0KIA0KICAgIA0KDQogICAgZm9yKGludCBpID0gMDsgaSA8IG47aSsrKSB7DQogICAgICAgIC8vbXBbe3ZbaV0sIHYyW2ldfV0rKzsNCiAgICAgICAgYXJyW3ZbaV1dW3YyW2ldXSsrOw0KICAgIH0NCiAgICB2ZWN0b3I8IHBhaXIgPCBwYWlyPGludCxpbnQ+LCBpbnQgPiA+IHZ2Ow0KICAgICBmb3IoaW50IGkgPTAgOyBpIDwyNjtpKyspIHsNCiAgICAgICAgZm9yKGludCBqID0wIDsgaiA8MjY7aisrKSB7DQogICAgICAgICAgICBpZihhcnJbaV1bal0gPT0gMCkgY29udGludWU7DQogICAgICAgICAgICBwYWlyPHBhaXI8aW50LGludD4sIGludCA+IHggPSBtYWtlX3BhaXIobWFrZV9wYWlyKGksaiksICBhcnJbaV1bal0pOw0KICAgICAgICAgICAgLy8gdnYucHVzaF9iYWNrKHt7aSxqfSwgYXJyW2ldW2pdfSk7DQogICAgICAgICAgICB2di5wdXNoX2JhY2soIHgpOw0KICAgICAgICAgICAgDQogICAgICAgIH0NCiAgICB9DQoNCg0KIA0KICAgIGludCBtID0gdnYuc2l6ZSgpOw0KICAgIGZvcihpbnQgaSA9MCA7IGkgPCBtO2krKykgew0KICAgICAgICBmb3IoaW50IGogPSBpOyBqIDwgbTtqKyspIHsNCiAgICAgICAgICAgIC8vIGNvdXQgPDwgaSA8PCIgIjw8IGogPDwiIGFuczogIjw8IGFucyAgPDwgZW5kbDsNCiAgICAgICAgICAgIC8vIHN3YXAgMSANCiAgICAgICAgICAgIGF1dG8gW3gseV0gPSB2dltpXS5maXJzdCA7DQogICAgICAgICAgICANCiAgICAgICAgICAgIGF1dG8gW3gyLCB5Ml0gPSB2dltqXS5maXJzdCA7DQoNCg0KICAgICAgICAgICAgaWYoaSA9PSBqKSB7DQogICAgICAgICAgICAgICAgaWYodnZbaV0uc2Vjb25kID09IDEpIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9DQogICAgICAgICAgICAvLyBwcmludChjbnQxKTsNCiAgICAgICAgICAgIC8vIHByaW50KGNudDIpOw0KICAgICAgICAgICAgY250MVt4XS0tOw0KICAgICAgICAgICAgY250MVt5XSArKzsNCiAgICAgICAgICAgIGNudDFbeDJdLS07DQogICAgICAgICAgICBjbnQxW3kyXSsrOw0KDQogICAgICAgICAgICBjbnQyW3hdICsrOw0KICAgICAgICAgICAgY250Mlt5XSAtLTsNCiAgICAgICAgICAgIGNudDJbeDJdKys7DQogICAgICAgICAgICBjbnQyW3kyXS0tOw0KDQoNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgaW50IG9rID0gMDsNCiAgICAgICAgICAgIC8vIGNvdXQgPDwgKGNoYXIpKHgrJ2EnKSA8PCIgIiA8PCAoY2hhcikoeSsnYScpIDw8IiAtLSAiPDwgKGNoYXIpKHgyKydhJykgPDwiICIgPDwgKGNoYXIpKHkyKydhJykgPDwgZW5kbDsNCiAgICAgICAgICAgIC8vIHByaW50KGNudDEpOw0KICAgICAgICAgICAgLy8gcHJpbnQoY250Mik7DQogICAgICAgICAgICAvLyBjb3V0IDw8IiI8PCBlbmRsOw0KDQogICAgICAgICAgICBmb3IoaW50IGsgPSAwIDsgayA8IDI2O2srKyl7DQogICAgICAgICAgICAgICAgaWYoY250MVtrXSAhPSAwICYmIGNudDFba10gPT0gY250MltrXSkgew0KICAgICAgICAgICAgICAgICAgICBvayA9IDE7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmKG9rKSB7DQogICAgICAgICAgICAgICAgaWYoaSA9PSBqKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIGNvdXQgPDwiT0sxIiA8PGVuZGw7DQogICAgICAgICAgICAgICAgICAgIGFucyArPSAoKGxsICl2dltpXS5zZWNvbmQgKiAodnZbal0uc2Vjb25kIC0xKSApIC8gMjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZXsNCiAgICAgICAgICAgICAgICAgICAgLy8gY291dCA8PCJPSzIiIDw8ZW5kbDsNCiAgICAgICAgICAgICAgICAgICAgYW5zICs9IChsbCApdnZbaV0uc2Vjb25kICogdnZbal0uc2Vjb25kOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBhbnMgJT0gbW9kIDsgICAgDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNudDJbeF0tLTsNCiAgICAgICAgICAgIGNudDJbeV0gKys7DQogICAgICAgICAgICBjbnQyW3gyXS0tOw0KICAgICAgICAgICAgY250Mlt5Ml0rKzsNCg0KICAgICAgICAgICAgY250MVt4XSArKzsNCiAgICAgICAgICAgIGNudDFbeV0gLS07DQogICAgICAgICAgICBjbnQxW3gyXSsrOw0KICAgICAgICAgICAgY250MVt5Ml0tLTsNCg0KICAgICAgICB9DQogICAgfQ0KICAgIGNvdXQgPDwgYW5zIDw8IGVuZGw7DQoNCn0NCg0KDQoNCmludCBtYWluICgpew0KICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKSwgY2luLnRpZSgwKSwgY291dC50aWUoMCk7DQogICAgaW50IHQgPSAxOw0KICAgIC8vIGNpbiA+PiB0Ow0KICAgIHdoaWxlICh0LS0pew0KICAgICAgICBzb2x2ZSgpOw0KICAgIH0NCg0KICAgIHJldHVybiAwOw0KfQ0KDQoNCi8qDQoNCmNjY2NjY2FhYWFiDQpjY2NjY2NiYmJiYQ0KDQoqLw=="}]