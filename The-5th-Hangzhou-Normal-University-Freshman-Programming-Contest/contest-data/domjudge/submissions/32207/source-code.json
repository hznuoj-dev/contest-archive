[{"id":"32207","submission_id":"32207","filename":"test.cpp","source":"I2luY2x1ZGUgPG1hcD4NCiNpbmNsdWRlIDxudW1lcmljPg0KI2luY2x1ZGUgPHNldD4NCiNpbmNsdWRlIDxhcnJheT4NCiNpbmNsdWRlIDxjbWF0aD4NCiNpbmNsdWRlIDxxdWV1ZT4NCiNpbmNsdWRlIDxzdGFjaz4NCiNpbmNsdWRlIDx0dXBsZT4NCiNpbmNsdWRlIDxjY3R5cGU+DQojaW5jbHVkZSA8Y3N0ZGlvPg0KI2luY2x1ZGUgPHN0cmluZz4NCiNpbmNsdWRlIDx2ZWN0b3I+DQojaW5jbHVkZSA8Y2Fzc2VydD4NCiNpbmNsdWRlIDxjc3RyaW5nPg0KI2luY2x1ZGUgPGlvbWFuaXA+DQojaW5jbHVkZSA8aW9zdHJlYW0+DQojaW5jbHVkZSA8YWxnb3JpdGhtPg0KI2luY2x1ZGUgPGZ1bmN0aW9uYWw+DQojaW5jbHVkZSA8dW5vcmRlcmVkX21hcD4NCnVzaW5nIG5hbWVzcGFjZSBzdGQ7DQoNCiNkZWZpbmUgZGIgZG91YmxlDQojZGVmaW5lIGlsIGlubGluZQ0KI2RlZmluZSBmaXIgZmlyc3QNCiNkZWZpbmUgc2VjIHNlY29uZA0KI2RlZmluZSBlcHMgKDFlLTEwKQ0KI2RlZmluZSBwYiBwdXNoX2JhY2sNCiNkZWZpbmUgbGwgbG9uZyBsb25nDQojZGVmaW5lIG1rcCBtYWtlX3BhaXINCiNkZWZpbmUgZWIgZW1wbGFjZV9iYWNrDQojZGVmaW5lIHBpaSBwYWlyPGludCwgaW50Pg0KI2RlZmluZSBsb3diaXQoYSkgKGEgJiAoLWEpKQ0KI2RlZmluZSBTWihhKSAoKGludClhLnNpemUoKSkNCiNkZWZpbmUgdWxsIHVuc2lnbmVkIGxvbmcgbG9uZw0KI2RlZmluZSBhbGwoYSkgYS5iZWdpbigpLCBhLmVuZCgpDQojZGVmaW5lIHNwbGl0IGNvdXQgPDwgIj09PT09PT09PVxuIjsNCiNkZWZpbmUgR0cgeyBjb3V0IDw8ICJOT1xuIjsgcmV0dXJuOyB9DQojZGVmaW5lIHBsbCBwYWlyPGxvbmcgbG9uZywgbG9uZyBsb25nPg0KI2RlZmluZSBlcXVhbHMoYSwgYikgKGZhYnMoKGEpIC0gKGIpKSA8IGVwcykNCg0KY29uc3RleHByIGludCBPTiA9IDA7DQpjb25zdGV4cHIgaW50IENXID0gLTE7DQpjb25zdGV4cHIgaW50IENDVyA9IDE7DQpjb25zdGV4cHIgaW50IEJBQ0sgPSAyOw0KY29uc3RleHByIGludCBGUk9OVCA9IC0yOw0KY29uc3QgZGIgcGkgPSBhY29zKC0xLjAwMCk7DQpjb25zdGV4cHIgaW50IG1heG4gPSAzZTUgKyA1MDsNCmNvbnN0ZXhwciBpbnQgSU5GID0gMHgzZjNmM2YzZjsNCmNvbnN0ZXhwciBsbCBMSU5GID0gIDB4M2YzZjNmM2YzZjNmM2YzZjsNCmNvbnN0ZXhwciBsbCBtb2QgPSA5OTgyNDQzNTM7IC8qIDFlOSArIDcgKi8NCmNvbnN0ZXhwciBpbnQgZGlyWzhdWzJdID0gey0xLCAwLCAtMSwgMSwgMCwgMSwgMSwgMSwgMSwgMCwgMSwgLTEsIDAsIC0xLCAtMSwgLTF9Ow0KDQoNCmludCBuLCBrLCBxOw0KaW50IGFbbWF4bl07DQppbnQgc3RfbWluWzIwXVttYXhuXSwgc3RfbWF4WzIwXVttYXhuXTsNCg0KaW50IGxnW21heG5dOw0KDQp2b2lkIGJ1aWxkX3N0KCkgew0KICAgIGZvciAoaW50IGkgPSAyOyBpIDw9IG47ICsraSkNCiAgICAgICAgbGdbaV0gPSBsZ1tpID4+IDFdICsgMTsNCiAgICBmb3IgKGludCBpID0gMTsgaSA8PSBuOyArK2kpDQogICAgICAgIHN0X21pblswXVtpXSA9IHN0X21heFswXVtpXSA9IGFbaV07DQogICAgZm9yIChpbnQgaiA9IDE7IGogPD0gMTg7ICsraikNCiAgICAgICAgZm9yIChpbnQgaSA9IDE7IGkgKyAoMSA8PCBqKSAtIDEgPD0gbjsgKytpKQ0KICAgICAgICAgICAgc3RfbWluW2pdW2ldID0gbWluKHN0X21pbltqIC0gMV1baV0sIHN0X21pbltqIC0gMV1baSArICgxIDw8IChqIC0gMSkpXSksDQogICAgICAgICAgICBzdF9tYXhbal1baV0gPSBtYXgoc3RfbWF4W2ogLSAxXVtpXSwgc3RfbWF4W2ogLSAxXVtpICsgKDEgPDwgKGogLSAxKSldKTsNCn0NCg0KaW50IHF1ZXJ5X21pbihpbnQgbCwgaW50IHIpIHsNCiAgICBpbnQgayA9IGxnW3IgLSBsICsgMV07DQogICAgcmV0dXJuIG1pbihzdF9taW5ba11bbF0sIHN0X21pbltrXVtyIC0gKDEgPDwgaykgKyAxXSk7DQp9DQoNCmludCBxdWVyeV9tYXgoaW50IGwsIGludCByKSB7DQogICAgaW50IGsgPSBsZ1tyIC0gbCArIDFdOw0KICAgIHJldHVybiBtYXgoc3RfbWluW2tdW2xdLCBzdF9tYXhba11bciAtICgxIDw8IGspICsgMV0pOw0KfQ0KDQoNCmxsIHN1bVttYXhuIDw8IDJdLCBsYXp5W21heG4gPDwgMl07DQp2b2lkIHB1c2hfdXAoaW50IHApIHsNCiAgICBzdW1bcF0gPSBzdW1bcCA8PCAxXSArIHN1bVtwIDw8IDEgfCAxXTsNCn0NCnZvaWQgcHVzaF9kb3duKGludCBwLCBpbnQgbCwgaW50IHIpIHsNCiAgICBpZiAobGF6eVtwXSkgew0KICAgICAgICBpbnQgbWlkID0gbCArIHIgPj4gMTsNCiAgICAgICAgc3VtW3AgPDwgMV0gKz0gbGF6eVtwXSAqIChtaWQgLSBsICsgMSk7DQogICAgICAgIHN1bVtwIDw8IDEgfCAxXSArPSBsYXp5W3BdICogKHIgLSBtaWQpOw0KICAgICAgICBsYXp5W3AgPDwgMV0gKz0gbGF6eVtwXTsNCiAgICAgICAgbGF6eVtwIDw8IDEgfCAxXSArPSBsYXp5W3BdOw0KICAgICAgICBsYXp5W3BdID0gMDsNCiAgICB9DQp9DQp2b2lkIHVwZGF0ZShpbnQgcCwgaW50IGwsIGludCByLCBpbnQgcWwsIGludCBxciwgbGwgdmFsKSB7DQogICAgaWYgKHFsIDw9IGwgJiYgciA8PSBxcikgew0KICAgICAgICBzdW1bcF0gKz0gdmFsICogKHIgLSBsICsgMSk7DQogICAgICAgIGxhenlbcF0gKz0gdmFsOw0KICAgICAgICByZXR1cm4gOw0KICAgIH0NCiAgICBwdXNoX2Rvd24ocCwgbCwgcik7DQogICAgaW50IG1pZCA9IGwgKyByID4+IDE7DQogICAgaWYgKHFsIDw9IG1pZCkgdXBkYXRlKHAgPDwgMSwgbCwgbWlkLCBxbCwgcXIsIHZhbCk7DQogICAgaWYgKG1pZCA8IHFyKSB1cGRhdGUocCA8PCAxIHwgMSwgbWlkICsgMSwgciwgcWwsIHFyLCB2YWwpOw0KICAgIHB1c2hfdXAocCk7DQp9DQpsbCBxdWVyeShpbnQgcCwgaW50IGwsIGludCByLCBpbnQgcWwsIGludCBxcikgew0KICAgIGlmIChxbCA8PSBsICYmIHIgPD0gcXIpIHJldHVybiBzdW1bcF07DQogICAgcHVzaF9kb3duKHAsIGwsIHIpOw0KICAgIGludCBtaWQgPSBsICsgciA+PiAxOw0KICAgIGxsIGFucyA9IDA7DQogICAgaWYgKHFsIDw9IG1pZCkgYW5zICs9IHF1ZXJ5KHAgPDwgMSwgbCwgbWlkLCBxbCwgcXIpOw0KICAgIGlmIChtaWQgPCBxcikgYW5zICs9IHF1ZXJ5KHAgPDwgMSB8IDEsIG1pZCArIDEsIHIsIHFsLCBxcik7DQogICAgcmV0dXJuIGFuczsNCn0NCg0KcGlpIHRhZ1ttYXhuXTsNCg0Kc3RydWN0IFEgew0KICAgIGludCBpZDsNCiAgICBpbnQgbCwgcjsNCiAgICBib29sIG9wZXJhdG9yPChjb25zdCBRIHQpIGNvbnN0IHsNCiAgICAgICAgcmV0dXJuIGwgPCB0Lmw7DQogICAgfQ0KfSBxclttYXhuXTsNCg0KbGwgYW5zW21heG5dOw0KDQp2b2lkIHNvbHZlKGludCBjYXMpIHsNCiAgICBjaW4gPj4gbiA+PiBrID4+IHE7DQogICAgZm9yIChpbnQgaSA9IDE7IGkgPD0gbjsgKytpKQ0KICAgICAgICBjaW4gPj4gYVtpXTsNCiAgICBidWlsZF9zdCgpOw0KICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IG47ICsraSkgew0KICAgICAgICBpbnQgbCA9IGksIHIgPSBuOw0KICAgICAgICBpbnQgTCA9IGksIFIgPSBpOw0KICAgICAgICB3aGlsZSAobCA8PSByKSB7DQogICAgICAgICAgICBpbnQgbWlkID0gbCArIHIgPj4gMTsNCiAgICAgICAgICAgIGlmIChxdWVyeV9tYXgoaSwgbWlkKSAtIHF1ZXJ5X21pbihpLCBtaWQpIDw9IGspIHsNCiAgICAgICAgICAgICAgICBSID0gbWlkOw0KICAgICAgICAgICAgICAgIGwgPSBtaWQgKyAxOw0KICAgICAgICAgICAgfSBlbHNlIHIgPSBtaWQgLSAxOw0KICAgICAgICB9DQogICAgICAgIHRhZ1tpXSA9IHtMLCBSfTsNCiAgICAgICAgdXBkYXRlKDEsIDEsIG4sIEwsIFIsIDEpOw0KICAgIH0NCiAgICBmb3IgKGludCBpID0gMTsgaSA8PSBxOyArK2kpIHsNCiAgICAgICAgY2luID4+IHFyW2ldLmwgPj4gcXJbaV0ucjsNCiAgICAgICAgcXJbaV0uaWQgPSBpOw0KICAgIH0NCiAgICBzb3J0KHFyICsgMSwgcXIgKyAxICsgcSk7DQogICAgaW50IGogPSAxOw0KICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IG47ICsraSkgew0KICAgICAgICB3aGlsZSAoaiA8PSBxICYmIHFyW2pdLmwgPD0gaSkgew0KICAgICAgICAgICAgYW5zW3FyW2pdLmlkXSA9IHF1ZXJ5KDEsIDEsIG4sIHFyW2pdLmwsIHFyW2pdLnIpOw0KICAgICAgICAgICAgaisrOw0KICAgICAgICB9DQogICAgICAgIHVwZGF0ZSgxLCAxLCBuLCB0YWdbaV0uZmlyLCB0YWdbaV0uc2VjLCAtMSk7DQogICAgfQ0KICAgIGZvciAoaW50IGkgPSAxOyBpIDw9IHE7ICsraSkNCiAgICAgICAgY291dCA8PCBhbnNbaV0gPDwgJ1xuJzsNCn0NCg0KDQpzaWduZWQgbWFpbigpIHsNCiAgICAvLyBjb3V0IDw8IGZpeGVkIDw8IHNldHByZWNpc2lvbigyKTsNCiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7IGNpbi50aWUobnVsbHB0cik7DQogICAgLy8gaW50IFQ7IGNpbj4+VDsgd2hpbGUgKFQtLSkNCiAgICBzb2x2ZSgxKTsNCiAgICByZXR1cm4gMDsNCn0NCg=="}]