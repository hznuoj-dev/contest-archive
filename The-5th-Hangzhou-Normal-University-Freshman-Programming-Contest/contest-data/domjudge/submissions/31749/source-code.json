[{"id":"31749","submission_id":"31749","filename":"main.cpp","source":"Ly8jaW5jbHVkZSA8aW9zdHJlYW0+Ci8vdXNpbmcgbmFtZXNwYWNlIHN0ZDsKLy9jb25zdCBpbnQgTiA9IDJlNSArIDEwOwovL2xvbmcgbG9uZyBxcG93KGxvbmcgbG9uZyBhICwgbG9uZyBsb25nIG4gLCBsb25nIGxvbmcgbW9kKXsKLy8gICAgbG9uZyBsb25nIGFucyA9IDE7Ci8vICAgIHdoaWxlKG4pewovLyAgICAgICAgaWYobiAmIDEpewovLyAgICAgICAgICAgIGFucyA9IGFucyAqIGEgJSBtb2Q7Ci8vICAgICAgICB9Ci8vICAgICAgICBuID4+PSAxOwovLyAgICAgICAgYSA9IGEgKiBhICUgbW9kOwovLyAgICB9Ci8vICAgIHJldHVybiBhbnM7Ci8vfQovL2ludCBmYVtOXSAsIGFbTl0gLCBzdW1bTl0gLCBiW05dOwovL2ludCBuICwgcTsKLy92b2lkIEluaXQoKXsKLy8gICAgZm9yKGludCBpID0gMSA7IGkgPD0gbjtpKyspIHsKLy8gICAgICAgIGZhW2ldID0gaTsKLy8gICAgICAgIHN1bVtpXSA9IDE7Ci8vICAgIH0KLy99Ci8vaW50IGZpbmQoaW50IHgpewovLyAgICByZXR1cm4gZmFbeF0gPT0geCA/IHggOiBmaW5kKGZhW3hdKTsKLy99Ci8vaW50IG1haW4oKSB7Ci8vICAgIGNpbiA+PiBuID4+IHE7Ci8vICAgIEluaXQoKTsKLy8gICAgZm9yKGludCBpID0gMSA7IGkgPD0gbjtpKyspewovLyAgICAgICAgY2luID4+IGJbaV07Ci8vICAgICAgICBhW2ldID0gYltpXTsKLy8gICAgfQovLyAgICBmb3IoaW50IGkgPSAxIDsgaSA8PSBxO2krKyl7Ci8vICAgICAgICBpbnQgayAsIHUgLCB2OwovLyAgICAgICAgY2luID4+IGsgPj4gdTsKLy8gICAgICAgIGlmKGsgPT0gMSl7Ci8vICAgICAgICAgICAgY2luID4+IHY7Ci8vICAgICAgICAgICAgaW50IGZ1ID0gZmluZCh1KTsKLy8gICAgICAgICAgICBpbnQgZnYgPSBmaW5kKHYpOwovLyAgICAgICAgICAgIGlmKGZ1ICE9IGZ2KSB7Ci8vICAgICAgICAgICAgICAgIGZhW2Z2XSA9IGZ1OwovLyAgICAgICAgICAgICAgICBzdW1bZnVdICs9IHN1bVtmdl07Ci8vICAgICAgICAgICAgICAgIGFbZnVdICs9IGFbZnZdOwovLyAgICAgICAgICAgIH0KLy8gICAgICAgIH1lbHNlIGlmKGsgPT0gMil7Ci8vICAgICAgICAgICAgY2luID4+IHY7Ci8vICAgICAgICAgICAgaW50IGZ1ID0gZmluZCh1KTsKLy8gICAgICAgICAgICBhW2Z1XSArPSB2ICogc3VtW2Z1XTsKLy8gICAgICAgIH1lbHNlewovLyAgICAgICAgICAgIGNvdXQgPDwKLy8gICAgICAgIH0KLy8gICAgfQovLyAgICByZXR1cm4gMDsKLy99CgoKLy8jaW5jbHVkZSAiaW9zdHJlYW0iCi8vI2luY2x1ZGUgIm1hcCIKLy91c2luZyBuYW1lc3BhY2Ugc3RkOwovL2NvbnN0IGludCBOID0gMmU1ICsgMTA7Ci8vaW50IGFbTl0gLCBzdW0gPSAwOwovL2ludCBmYVtOXSAsIGJbTl07Ci8vaW50IG4gLCBrOwovL21hcDxpbnQsaW50PiBtYXAxOwovL3ZvaWQgSW5pdCgpewovLyAgICBmb3IoaW50IGkgPSAxIDsgaSA8PSBuO2krKykgewovLyAgICAgICAgZmFbaV0gPSBpOwovLyAgICAgICAgYltpXSA9IDE7Ci8vICAgIH0KLy99Ci8vaW50IGZpbmQoaW50IHgpewovLyAgICByZXR1cm4gZmFbeF0gPT0geCA/IHggOiBmaW5kKGZhW3hdKTsKLy99Ci8vaW50IG1haW4oKXsKLy8gICAgY2luID4+IG4gPj4gazsKLy8gICAgZm9yKGludCBpID0gMSA7IGkgPD0gbjtpKyspewovLyAgICAgICAgY2luID4+IGFbaV07Ci8vICAgICAgICBpZihhW2ldID09IGkpIHN1bSsrOwovLyAgICB9Ci8vICAgIGlmKGsgPT0gbiAtIDEpIGNvdXQgPDwgLTE7Ci8vICAgIGVsc2V7Ci8vICAgICAgICBpZihzdW0gPj0gayl7Ci8vICAgICAgICAgICAgaWYoKHN1bSAtIGspICUgMiA9PSAwKXsKLy8gICAgICAgICAgICAgICAgY291dCA8PCAoc3VtIC0gaykgLyAyOwovLyAgICAgICAgICAgIH1lbHNlewovLyAgICAgICAgICAgICAgICBjb3V0IDw8IChzdW0gLSBrKSAvIDIgKyAxOwovLyAgICAgICAgICAgIH0KLy8gICAgICAgIH1lbHNlewovLyAgICAgICAgICAgIEluaXQoKTsKLy8gICAgICAgICAgICBmb3IoaW50IGkgPSAxIDsgaSA8PSBuO2krKyl7Ci8vICAgICAgICAgICAgICAgIGlmKGFbaV0gIT0gaSAmJiBmYVtpXSA9PSBpKXsKLy8gICAgICAgICAgICAgICAgICAgIGludCB6ID0gYVtpXTsKLy8gICAgICAgICAgICAgICAgICAgIHdoaWxlKHogIT0gaSl7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgaW50IGZ6ID0gZmluZCh6KTsKLy8gICAgICAgICAgICAgICAgICAgICAgICBpbnQgZmkgPSBmaW5kKGFbel0pOwovLyAgICAgICAgICAgICAgICAgICAgICAgIGlmKGZ6ICE9IGZpKXsKLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFbZmldID0gZno7Ci8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJbZnpdICs9IGJbZmldOwovLyAgICAgICAgICAgICAgICAgICAgICAgIH0KLy8gICAgICAgICAgICAgICAgICAgICAgICB6ID0gYVt6XTsKLy8gICAgICAgICAgICAgICAgICAgIH0KLy8gICAgICAgICAgICAgICAgICAgIG1hcDFbYlt6XV0rKzsKLy8gICAgICAgICAgICAgICAgfQovLyAgICAgICAgICAgIH0KLy8gICAgICAgICAgICBpbnQgYW5zID0gMDsKLy8gICAgICAgICAgICBrIC09IHN1bTsKLy8gICAgICAgICAgICBmb3IoYXV0byBpIDogbWFwMSl7Ci8vICAgICAgICAgICAgICAgIGlmKGkuZmlyc3QgPT0gMSkgY29udGludWU7Ci8vICAgICAgICAgICAgICAgIGlmKGsgPD0gaS5maXJzdCAqIGkuc2Vjb25kKXsKLy8gICAgICAgICAgICAgICAgICAgIGFucyArPSAoayAvIGkuZmlyc3QpICogaS5maXJzdCArIChrICUgaS5maXJzdCk7Ci8vICAgICAgICAgICAgICAgICAgICBrID0gMDsKLy8gICAgICAgICAgICAgICAgfWVsc2V7Ci8vICAgICAgICAgICAgICAgICAgICBhbnMgKz0gaS5maXJzdCAqIGkuc2Vjb25kOwovLyAgICAgICAgICAgICAgICAgICAgayAtPSBpLmZpcnN0ICogaS5zZWNvbmQ7Ci8vICAgICAgICAgICAgICAgIH0KLy8gICAgICAgICAgICAgICAgaWYoayA9PSAwKWJyZWFrOwovLyAgICAgICAgICAgIH0KLy8gICAgICAgICAgICBjb3V0IDw8IGFuczsKLy8gICAgICAgIH0KLy8gICAgfQovL30KCgojaW5jbHVkZSAiaW9zdHJlYW0iCiNpbmNsdWRlICJhbGdvcml0aG0iCnVzaW5nIG5hbWVzcGFjZSBzdGQ7CmNvbnN0IGludCBOID0gMmU1ICsgMTA7CmludCBuOwpsb25nIGxvbmcgYVtOXSAsIGJbTl0gLCBjW05dICxhbnMgPSAwOwppbnQgbWFpbigpewogICAgY2luID4+IG47CiAgICBmb3IoaW50IGkgPSAxIDsgaSA8PSBuO2krKyl7CiAgICAgICAgY2luID4+IGFbaV07CiAgICAgICAgY1tpXSA9IC1hW2ldOwogICAgfQogICAgZm9yKGludCBpID0gMSA7IGkgPD0gbjtpKyspIHsKICAgICAgICBjaW4gPj4gYltpXTsKICAgIH0KICAgICAgICBzb3J0KGEgKyAxICwgYSArIG4gKyAxKTsKICAgICAgICBzb3J0KGIgKyAxICwgYiArIG4gKyAxKTsKICAgICAgICBzb3J0KGMgKyAxICwgYyArIG4gKyAxKTsKICAgICAgICAgICAgbG9uZyBsb25nIGxhc3QxID0gYVsxXSAtIGJbMV0gLCBsYXN0MiA9IGNbMV0gLSBiWzFdOwogICAgICAgICAgICBpbnQgZmxhZzEgPSAwICwgZmxhZzIgPSAwOwogICAgICAgICAgICBmb3IoaW50IGkgPSAyIDsgaSA8PSBuO2krKyl7CiAgICAgICAgICAgICAgICBpZihsYXN0MSAhPSBhW2ldIC0gYltpXSAmJiBsYXN0MiAhPSBjW2ldIC0gYltpXSl7CiAgICAgICAgICAgICAgICAgICAgaWYobGFzdDEgIT0gYVtpXSAtIGJbaV0pIGZsYWcxID0gMTsKICAgICAgICAgICAgICAgICAgICBpZihsYXN0MiAhPSBjW2ldIC0gYltpXSkgZmxhZzIgPSAxOwogICAgICAgICAgICAgICAgICAgIGFucyA9IC0xOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKCFmbGFnMSAmJiAhZmxhZzIpIGFucyA9IG1pbihhYnMobGFzdDEpICwgMSArIGFicyggbGFzdDIpKTsKICAgICAgICAgICAgZWxzZSBpZighZmxhZzEpIGFucyA9IGFicyhsYXN0MSk7CiAgICAgICAgICAgIGVsc2UgaWYoIWZsYWcyKSBhbnMgPSBhYnMobGFzdDIpICsgMTsKICAgICAgICBjb3V0IDw8IGFuczsKfQo="}]