[{"id":"8486","submission_id":"8482","filename":"main.cpp","source":"I2luY2x1ZGUgPGJpdHMvc3RkYysrLmg+CnVzaW5nIG5hbWVzcGFjZSAgc3RkOwp0eXBlZGVmIGxvbmcgbG9uZyBsbDsKY29uc3QgaW50IG1heG4gPSAxZTYgKyAxMDsKY29uc3QgaW50IE1PRCA9IDk5ODI0NDM1MzsKY29uc3QgaW50IG1vZCA9IDFlOSArIDc7CmNvbnN0IGxsICBJTkYgPSAxZTE4Owpjb25zdCBpbnQgTiA9IDUyOwpsbCBxcG93KGxsIGEsIGxsIGIpIHsKICAgIGxsIHJlcyA9IDE7CiAgICB3aGlsZShiKSB7CiAgICAgICAgaWYoYiAmIDEpIHJlcyA9IHJlcyAqIGEgJSBtb2Q7CiAgICAgICAgYSA9IGEgKiBhICUgbW9kOwogICAgICAgIGIgPj49IDE7CiAgICB9CiAgICByZXR1cm4gcmVzOwp9CmludCBwW10gPSB7MiwgMywgNSwgNywgMTEsIDEzLCAxNywgMTksIDIzLCAyOX07CmludCB0b3QsIHJ0OwpzdHJ1Y3Qgc2VnVHJlZXsKICAgIGludCBscywgcnM7CiAgICBpbnQgbnVtWzEwXSwgbHpbMTBdOwogICAgYm9vbCBmOwp9dHJbbWF4bl07CiNkZWZpbmUgbHMoeCkgdHJbeF0ubHMKI2RlZmluZSBycyh4KSB0clt4XS5ycwp2b2lkIGJ1aWxkKGludCBsLCBpbnQgciwgaW50ICZ4KSB7CiAgICB4ID0gKyt0b3Q7CiAgICB0clt4XS5mID0gZmFsc2U7CiAgICBpZihsID09IHIpIHsKICAgICAgICByZXR1cm4gOwogICAgfQogICAgaW50IG1pZCA9IGwgKyByID4+IDE7CiAgICBidWlsZChsLCBtaWQsIGxzKHgpKTsKICAgIGJ1aWxkKG1pZCArIDEsIHIsIHJzKHgpKTsKfQp2b2lkIHB1c2hEb3duKGludCB4LCBpbnQgcG9zKSB7CiAgICBpbnQgJm0gPSB0clt4XS5seltwb3NdOwogICAgaWYoIW0pIHJldHVybjsKICAgIGlmKCF0cltscyh4KV0uZikgdHJbbHMoeCldLm51bVtwb3NdICs9IG0sIHRyW2xzKHgpXS5seltwb3NdICs9IG07CiAgICBpZighdHJbcnMoeCldLmYpIHRyW3JzKHgpXS5udW1bcG9zXSArPSBtLCB0cltycyh4KV0ubHpbcG9zXSArPSBtOwogICAgbSA9IDA7CiAgICByZXR1cm47Cn0Kdm9pZCBwdXNoVXAoaW50IHgpIHsKICAgIHRyW3hdLmYgPSB0cltscyh4KV0uZiAmIHRyW3JzKHgpXS5mOwogICAgaWYodHJbeF0uZikgcmV0dXJuOwogICAgaWYodHJbbHMoeCldLmYpIHsKICAgICAgICBmb3IoaW50IGkgPSAwOyBpIDwgMTA7ICsraSkgdHJbeF0ubnVtW2ldID0gdHJbcnMoeCldLm51bVtpXTsKICAgIH0gZWxzZSBpZih0cltycyh4KV0uZikgewogICAgICAgIGZvcihpbnQgaSA9IDA7IGkgPCAxMDsgKytpKSB0clt4XS5udW1baV0gPSB0cltscyh4KV0ubnVtW2ldOwogICAgfSBlbHNlIHsKICAgICAgICBmb3IoaW50IGkgPSAwOyBpIDwgMTA7ICsraSkgdHJbeF0ubnVtW2ldID0gbWluKHRyW2xzKHgpXS5udW1baV0sIHRyW3JzKHgpXS5udW1baV0pOwogICAgfQp9CnZvaWQgbXVsKGludCBsLCBpbnQgciwgaW50IEwgLCBpbnQgUiwgaW50IHgsIGludCBwb3MsIGludCB2YWwpIHsKICAgIGlmKGwgPD0gTCAmJiByIDw9IFIpIHsKICAgICAgICB0clt4XS5seltwb3NdICs9IHZhbDsKICAgICAgICB0clt4XS5udW1bcG9zXSArPSB2YWw7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaW50IG1pZCA9IGwgKyByID4+IDE7CiAgICBwdXNoRG93bih4LCBwb3MpOwogICAgaWYobWlkID49IEwpIG11bChsLCBtaWQsIEwsIFIsIGxzKHgpLCBwb3MsIHZhbCk7CiAgICBpZihtaWQgPCBSKSBtdWwobWlkICsgMSwgciwgTCwgUiwgcnMoeCksIHBvcywgdmFsKTsKICAgIHB1c2hVcCh4KTsKfQp2b2lkIGRpdihpbnQgbCwgaW50IHIsIGludCBMICwgaW50IFIsIGludCB4LCBpbnQgcG9zLCBpbnQgdmFsKSB7CiAgICBpZihsIDw9IEwgJiYgciA8PSBSKSB7CiAgICAgICAgaWYodHJbeF0uZikgcmV0dXJuOwogICAgICAgIHRyW3hdLmx6W3Bvc10gLT0gdmFsOwogICAgICAgIHRyW3hdLm51bVtwb3NdIC09IHZhbDsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBpbnQgbWlkID0gbCArIHIgPj4gMTsKICAgIHB1c2hEb3duKHgsIHBvcyk7CiAgICBpZihtaWQgPj0gTCkgbXVsKGwsIG1pZCwgTCwgUiwgbHMoeCksIHBvcywgdmFsKTsKICAgIGlmKG1pZCA8IFIpIG11bChtaWQgKyAxLCByLCBMLCBSLCBycyh4KSwgcG9zLCB2YWwpOwogICAgcHVzaFVwKHgpOwp9CnZvaWQgZmlscChpbnQgcG9zLCBpbnQgbCwgaW50IHIsIGludCB4KSB7CiAgICBpZihsID09IHIpIHsKICAgICAgICB0clt4XS5mID0gIXRyW3hdLmY7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaW50IG1pZCA9IGwgKyByID4+IDE7CiAgICBmb3IoaW50IGkgPSAwOyBpIDwgMTA7ICsraSkgcHVzaERvd24oeCwgaSk7CiAgICBpZihtaWQgPj0geCkgZmlscCh4LCBsLCBtaWQsIGxzKHgpKTsKICAgIGVsc2UgZmlscCh4LCBtaWQgKyAxLCByLCBycyh4KSk7CiAgICBmb3IoaW50IGkgPSAwOyBpIDwgMTA7ICsraSkgcHVzaFVwKHgpOwp9CmludCBxdWVyeShpbnQgbCwgaW50IHIgLGludCBMICxpbnQgUiwgaW50IHgsIGludCBwb3MsIGludCB2YWwpIHsKICAgIGlmKGwgPj0gTCAmJiByIDw9IFIpewogICAgICAgIGlmKHRyW3hdLmYpIHJldHVybiAxOwogICAgICAgIHJldHVybiB0clt4XS5udW1bcG9zXSA+PSB2YWw7CiAgICB9CiAgICBpbnQgbWlkID0gbCArIHIgPj4gMTsKICAgIHB1c2hEb3duKHgsIHBvcyk7CiAgICBpbnQgcmVzID0gMTsKICAgIGlmKG1pZCA+PSBMKSByZXMgJj0gcXVlcnkobCwgbWlkLCBMLCBSLCBscyh4KSwgcG9zLCB2YWwpOwogICAgaWYobWlkIDwgUikgcmVzICY9IHF1ZXJ5KG1pZCArIDEsIHIsIEwsIFIsIHJzKHgpLCBwb3MsIHZhbCk7CiAgICByZXR1cm4gcmVzOwp9CnN0cmluZyBzOwpzdHJ1Y3Qgbm9kZXsKICAgIHZlY3RvcjxwYWlyPGludCxpbnQ+PiBxOwp9WFszMV07CnZvaWQgc29sdmUoKXsKICAgIGludCBuLCBtOwogICAgY2luID4+IG4gPj4gbTsKICAgIGZvcihpbnQgaSA9IDI7IGkgPD0gMzA7ICsraSkgewogICAgICAgIGludCBjdXIgPSBpOwogICAgICAgIGZvcihpbnQgaiA9IDA7IGogPCAxMDsgKytqKSB7CiAgICAgICAgICAgIGludCBjbnQgPSAwOwogICAgICAgICAgICB3aGlsZShjdXIgJSBwW2pdID09IDApIGN1ciAvPSBwW2pdLCArK2NudDsKICAgICAgICAgICAgaWYoY250ICE9IDApIFhbaV0ucS5wdXNoX2JhY2soe2osIGNudH0pOwogICAgICAgIH0KICAgIH0KICAgIGJ1aWxkKDEsIG4sIHJ0KTsKICAgIHdoaWxlKG0gLS0gPiAwKSB7CiAgICAgICAgY2luID4+IHM7CiAgICAgICAgaW50IGwsIHIsIHg7CiAgICAgICAgaWYocyA9PSAibXVsIikgewogICAgICAgICAgICBjaW4gPj4gbCA+PiByID4+IHg7CiAgICAgICAgICAgIGZvcihhdXRvICZbYSxiXSA6IFhbeF0ucSl7CiAgICAgICAgICAgICAgICBtdWwobCxyLDEsbixydCxhLCBiKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZihzID09ICJkaXYiKSB7CiAgICAgICAgICAgIGNpbiA+PiBsID4+IHIgPj4geDsKICAgICAgICAgICAgYm9vbCBmID0gMTsKICAgICAgICAgICAgZm9yKGF1dG8gJlthLGJdIDogWFt4XS5xKSBmICY9IHF1ZXJ5KGwsciwxLG4scnQsYSwgYik7CiAgICAgICAgICAgIGlmKGYpIGNvdXQgPDwgIllFU1xuIjsKICAgICAgICAgICAgZWxzZSBjb3V0IDw8ICJOT1xuIjsKICAgICAgICAgICAgaWYoZikgewogICAgICAgICAgICAgICAgZm9yKGF1dG8gJlthLGJdIDogWFt4XS5xKSBkaXYobCxyLDEsbixydCxhLCBiKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGludCBwczsKICAgICAgICAgICAgY2luID4+IHBzOwogICAgICAgICAgICBmaWxwKHBzLCAxLCBuLCBydCk7CiAgICAgICAgfQogICAgfQp9CgoKc2lnbmVkIG1haW4oKSB7CiAgICBpb3M6OnN5bmNfd2l0aF9zdGRpbyhmYWxzZSk7CiAgICBjaW4udGllKG51bGxwdHIpOyBjb3V0LnRpZShudWxscHRyKTsKI2lmZGVmIEFDTQogICAgZnJlb3BlbigiaW4udHh0IiwiciIsc3RkaW4pOwogICAgZnJlb3Blbigib3V0LnR4dCIsInciLHN0ZG91dCk7CiNlbmRpZgogICAgaW50IHQgPSAxOwovLyAgICBjaW4gPj4gdDsKICAgIHdoaWxlKHQgLS0pIHNvbHZlKCk7Cn0="}]